#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_LAYER   0
#define SECONDARY_LAYER 1
#define TERTIARY_LAYER  2
#define SYSTEM_LAYER    3
#define MOUSE_R_LAYER   4
#define SCROLL_R_LAYER  5
#define MOUSE_L_LAYER   6
#define SCROLL_L_LAYER  7

// Mouse Scroll Value

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

// cirque trackpad input&layer control

&glidepoint_listener_R {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_R_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 5>,
            <&zip_temp_layer MOUSE_R_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_R_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP)>,
            <&zip_scroll_scaler 1 8>;
    };
};

&glidepoint_listener_L {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_L_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 4>,
            <&zip_temp_layer MOUSE_L_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_L_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 6>;
    };
};

/ {
    behaviors {
        // Encoder to Mouse Scroll

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_down_up: behavior_sensor_rotate_mouse_wheel_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        scroll_right_left: behavior_sensor_rotate_mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
        };

        volume_up_down: behavior_sensor_rotate_volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <20>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "DOT_COMMA";
        };

        pls_minus: pls_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "PLS_MINUS";
        };

        allow_pageup: allow_pageup {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp PAGE_UP>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEUP";
        };

        allow_pagedown: allow_pagedown {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEDOWN";
        };

        allow_home: allow_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp HOME>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_HOME";
        };

        allow_end: allow_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp END>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_END";
        };

        mt2: mod_tap2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            display-name = "Default";
            sensor-bindings = <&scroll_left_right>, <&scroll_up_down>;

            bindings = <
&kp CARET     &kp Q          &kp W            &kp E           &kp R             &kp T         &kp Y          &kp U        &kp I            &kp O       &kp P      &kp DOLLAR
&kp LEFT_GUI  &kp A          &kp S            &kp D           &kp F             &kp G         &kp H          &kp J        &kp K            &kp L       &kp COLON  &kp LEFT_GUI
&kp LEFT_ALT  &kp Z          &kp X            &kp C           &kp V             &kp B         &kp N          &kp M        &kp COMMA        &kp PERIOD  &mo 1      &kp SLASH
&kp AT        &kp AMPERSAND  &mo 2            &kp LEFT_SHIFT  &mt LCTRL ESCAPE  &kp TAB       &kp BACKSPACE  &kp ENTER    &kp SPACE        &kp UNDER   &kp GRAVE  &kp SINGLE_QUOTE
                             &kp RIGHT_ARROW  &kp DOWN_ARROW  &kp LEFT_ARROW    &kp UP_ARROW  &allow_pageup  &allow_home  &allow_pagedown  &allow_end
            >;
        };

        MARKS_LAYER {
            display-name = "mouse_l_layer";
            bindings = <
&trans  &trans  &kp TILDE    &kp PIPE         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none     &kp MINUS          &kp KP_MINUS   &kp PLUS   &trans         &trans
&trans  &kp AT  &kp PERCENT  &kp EXCLAMATION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp HASH  &kp ASTRK          &kp UNDER      &kp EQUAL  &kp SEMICOLON  &trans
&trans  &trans  &kp PLUS     &kp AMPERSAND    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SQT   &kp DOUBLE_QUOTES  &kp BACKSLASH  &trans     &trans         &trans
&trans  &trans  &trans       &trans           &trans                &trans                 &trans    &trans             &mo 3          &trans     &trans         &trans
                &trans       &trans           &trans                &trans                 &trans    &trans             &trans         &trans
            >;
        };

        SECONDARY_LAYER {
            display-name = "secondary_layer";
            sensor-bindings = <&scroll_left_right>, <&scroll_left_right>;

            bindings = <
&none   &none   &none      &none     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &trans
&trans  &none   &none      &none     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &trans
&trans  &trans  &trans     &trans    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PAGE_DOWN    &kp KP_MINUS     &kp KP_PLUS      &trans           &trans           &trans
&trans  &trans  &trans     &none     &mo 7                 &none                  &trans           &kp HOME         &mo 1            &kp KP_NUMBER_0  &dot_comma       &kp EQUAL
                &kp RIGHT  &kp DOWN  &kp LEFT              &kp UP                 &trans           &trans           &trans           &trans
            >;
        };

        TERTIARY_LAYER {
            display-name = "tertiary_layer";
            bindings = <
&trans  &kp LG(LS(NUMBER_1))  &kp LS(LG(NUMBER_2))  &kp LS(LG(NUMBER_3))  &kp LS(LG(F4))  &kp LS(LG(F5))  &kp LS(LG(F6))  &kp LS(LG(F7))  &kp LS(LG(F8))  &kp LS(LG(NUMBER_9))  &kp LS(LG(NUMBER_0))  &trans
&trans  &kp F1                &kp F2                &kp F3                &kp F4          &kp F5          &kp F6          &kp F7          &kp F8          &kp F9                &kp F10               &trans
&trans  &kp F11               &kp F12               &kp F13               &kp F14         &kp F15         &kp F16         &kp F17         &kp F18         &kp F19               &kp F20               &trans
&trans  &trans                &trans                &trans                &trans          &trans          &trans          &trans          &trans          &trans                &trans                &trans
                              &trans                &trans                &trans          &trans          &trans          &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        MOUSE_R_LAYER {
            display-name = "mouse_r_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB1  &mkp RCLK  &mkp MCLK  &mo 5   &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB3  &mkp MB4   &mkp MB5   &none   &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans
            >;
        };

        SCROLL_R_LAYER {
            display-name = "scroll_r_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SYSTEM_LAYER {
            display-name = "system_layer";
            sensor-bindings = <&scroll_down_up>, <&volume_up_down>;

            bindings = <
&trans  &trans  &trans  &trans  &trans       &trans      &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&trans  &trans  &trans  &trans  &bootloader  &sys_reset  &sys_reset    &bootloader   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &trans
&trans  &trans  &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans        &trans          &trans
&trans  &trans  &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans        &trans          &trans
                &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans
            >;
        };

        SCROLL_L_LAYER {
            display-name = "scroll_l_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
